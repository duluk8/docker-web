# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: 'ubuntu-latest'
  
variables:
  imageName: 'simpleFlaskWebApp-u121662'
  registryName: 'mobiintern'
  containerName: 'simpleFlaskWebApp-u121662'
  resourceGroup: 'u121662'
  location: 'switzerlandnorth'
  cpu: 1
  memoryInGB: 1

steps:
- task: Docker@2
  displayName: Build and push Docker image
  inputs:
    command: 'buildAndPush'
    containerRegistry: '$(registryName)'
    repository: '$(imageName)'
    dockerfile: '**/Dockerfile'
    tags: '$(Build.BuildId)'

- task: AzureCLI@2
  displayName: Create ACI container
  inputs:
    azureSubscription: 'Mobiliar IT SB 01'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      az container create \
        --resource-group $(resourceGroup) \
        --name $(containerName) \
        --image $(registryName).azurecr.io/$(imageName):$(Build.BuildId) \
        --cpu $(cpu) \
        --memory $(memoryInGB) \
        --registry-login-server $(registryName).azurecr.io \
        --registry-username $(registryName) \
        --registry-password $(registryPassword) \
        --dns-name-label $(containerName) \
        --ports 80 \
        --tags owner=u121662 ITOwner=leo.mollet@mobi.ch

- task: AzureCLI@2
  displayName: Get ACI container IP address
  inputs:
    azureSubscription: 'Mobiliar IT SB 01'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      ipAddress=$(az container show \
        --resource-group $(resourceGroup) \
        --name $(containerName) \
        --query ipAddress.ip \
        --output tsv)
      echo "Container IP address: $ipAddress"
